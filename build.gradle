apply plugin: "com.github.ben-manes.versions"

buildscript {

    dependencies {
        classpath "com.github.ben-manes:gradle-versions-plugin:0.21.0"
    }

    ext.versions = [
            compileSdk            : 28,
            targetSdk             : 28,
            minSdk                : 21,
            versionCode           : 1,
            versionName           : '1.1.0',
            compatibility         : '1.8',

            buildGradle           : '3.4.1',
            googleServices        : '4.2.0',
            fabric                : '1.29.0',

            supportLibrary        : '1.1.0-alpha05',
            annotation            : '1.1.0-beta01',
            legacySupport         : '1.0.0',
            kotlin                : '1.3.31',
            moxy                  : '1.5.6',
            dagger                : '2.23',
            jsr250                : '1.0',
            lifecycle             : '2.0.0',
            multidex              : '1.0.3',

            material              : '1.0.0',
            constraintLayout      : '2.0.0-beta1',
            recycler              : '1.0.0',
            recyclerScrollDecor   : '1.0.4',
            lottie                : '3.0.3',
            picassoTransformations: '2.2.1',
            spinnerDatePicker     : '2.0.1',

            rxJava                : '2.2.9',
            rxAndroid             : '2.1.1',
            rxContacts            : '1.2.0',

            retrofit              : '2.5.0',
            cicerone              : '5.0.0',
            gson                  : '2.8.5',
            room                  : '2.1.0-beta01',
            picasso               : '2.71828',
            crashlytics           : '2.10.1',
            okhttp3               : '3.14.2',

            mockito               : '2.28.2',
            mockitoKotlin         : '2.1.0',
            junit                 : '4.12',
            testRunner            : '1.2.0',
            espressoCore          : '3.2.0',
            archCore              : '1.1.1',

            firebaseMessaging     : '18.0.0',
            firebaseCore          : '16.0.9',
            firebaseConfig        : '17.0.0',

            pinLockView           : '031698d7d1',
            logger                : '2.2.0',
            biometric             : '1.0.0-alpha04',
            libphonenumber        : '8.10.11',

            slidinguppanel        : '3.4.0',
            findbugs              : '3.0.2'

    ]

    ext.core = [
            kotlin          : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin",
            kotlinExtensions: "org.jetbrains.kotlin:kotlin-android-extensions-runtime:$versions.kotlin",
            annotation      : "androidx.annotation:annotation:$versions.annotation",
            multidex        : "com.android.support:multidex:$versions.multidex",
            crashlytics     : "com.crashlytics.sdk.android:crashlytics:$versions.crashlytics@aar",
            capital         : "com.github.soramitsu:capital_android:$versions.capital"
    ]

    ext.ui = [
            appcompat             : "androidx.appcompat:appcompat:$versions.supportLibrary",
            material              : "com.google.android.material:material:$versions.material",
            recyclerview          : "androidx.recyclerview:recyclerview:$versions.recycler",
            constraintLayout      : "androidx.constraintlayout:constraintlayout:$versions.constraintLayout",
            lottie                : "com.airbnb.android:lottie:$versions.lottie",
            picasso               : "com.squareup.picasso:picasso:$versions.picasso",
            picassoTransformations: "jp.wasabeef:picasso-transformations:$versions.picassoTransformations",
            lifecycle             : "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle",
            lifecycleCompiler     : "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle",
            spinnerDatePicker     : "com.github.drawers:SpinnerDatePicker:$versions.spinnerDatePicker",
            pinLockView           : "com.github.dmitriyTarasov:PinLockView:$versions.pinLockView",
            androidtoggleswitch   : "com.llollox:androidtoggleswitch:$versions.androidtoggleswitch",
            slidinguppanel        : "com.sothree.slidinguppanel:library:$versions.slidinguppanel",
            flexbox               : "com.google.android:flexbox:$versions.flexbox",
            biometric             : "androidx.biometric:biometric:$versions.biometric",
            recyclerScrollDecor   : "me.everything:overscroll-decor-android:$versions.recyclerScrollDecor"
    ]

    ext.common = [
            zxingCore           : "com.google.zxing:core:$versions.zxingCore",
            zxingAndroidEmbedded: "com.journeyapps:zxing-android-embedded:$versions.zxingAndroidEmbedded@aar",
            phonematter         : "com.terrakok.phonematter:phonematter:$versions.phonematter@aar",
            cicerone            : "ru.terrakok.cicerone:cicerone:$versions.cicerone",
            logger              : "com.orhanobut:logger:$versions.logger",
            libphonenumber      : "com.googlecode.libphonenumber:libphonenumber:$versions.libphonenumber",
            findbugs            : "com.google.code.findbugs:jsr305:$versions.findbugs"
    ]

    ext.moxy = [
            core     : "com.arello-mobile:moxy:$versions.moxy",
            appCompat: "com.arello-mobile:moxy-app-compat:$versions.moxy",
            compiler : "com.arello-mobile:moxy-compiler:$versions.moxy"
    ]

    ext.dagger = [
            core         : "com.google.dagger:dagger:$versions.dagger",
            compiler     : "com.google.dagger:dagger-compiler:$versions.dagger",
            jsr250       : "javax.annotation:jsr250-api:$versions.jsr250",
            legacySupport: "androidx.legacy:legacy-support-v4:$versions.legacySupport"
    ]

    ext.rxjava = [
            core     : "io.reactivex.rxjava2:rxjava:$versions.rxJava",
            android  : "io.reactivex.rxjava2:rxandroid:$versions.rxAndroid",
            contacts : "com.github.mirrajabi:rx-contacts2:$versions.rxContacts",
            lifecycle: "androidx.lifecycle:lifecycle-reactivestreams:$versions.lifecycle"
    ]

    ext.room = [
            core    : "androidx.room:room-runtime:$versions.room",
            compiler: "androidx.room:room-compiler:$versions.room",
            rxjava  : "androidx.room:room-rxjava2:$versions.room"
    ]

    ext.firebase = [
            core     : "com.google.firebase:firebase-core:$versions.firebaseCore",
            config   : "com.google.firebase:firebase-config:$versions.firebaseConfig",
            messaging: "com.google.firebase:firebase-messaging:$versions.firebaseMessaging",
    ]

    ext.rest = [
            retrofit                : "com.squareup.retrofit2:retrofit:$versions.retrofit",
            retrofitConverter       : "com.squareup.retrofit2:converter-gson:$versions.retrofit",
            retrofitAdapter         : "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit",
            okhttp                  : "com.squareup.okhttp3:okhttp-urlconnection:$versions.okhttp3",
            okhttpLoggingInterceptor: "com.squareup.okhttp3:logging-interceptor:$versions.okhttp3",
            gson                    : "com.google.code.gson:gson:$versions.gson",
    ]

    ext.test = [
            mockito      : "org.mockito:mockito-core:$versions.mockito",
            mockitoKotlin: "com.nhaarman.mockitokotlin2:mockito-kotlin:$versions.mockitoKotlin",
            junit        : "junit:junit:$versions.junit",
            testRunner   : "androidx.test:runner:$versions.testRunner",
            espressoCore : "androidx.test.espresso:espresso-core:$versions.espressoCore",
            room         : "androidx.room:room-testing:$versions.room",
            archCore     : "android.arch.core:core-testing:$versions.archCore"
    ]

    ext.kotlin_version = '1.3.31'
    ext.kotlin_version = '1.2.71'
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}


//./gradlew dependencyUpdates -Drevision=milestone / release
dependencyUpdates.resolutionStrategy {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['rc', 'cr', 'm', 'preview', 'b', 'ea'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]$qualifier[.\d-+]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}
